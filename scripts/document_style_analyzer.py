#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
from docx import Document
from docx.shared import Pt, Mm
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT, WD_LINE_SPACING
from docx.styles.style import _ParagraphStyle

class DocumentStyleAnalyzer:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∏–ª–µ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞ Word
    """
    
    def __init__(self, document_path):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å –ø—É—Ç–µ–º –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É"""
        self.document_path = document_path
        self.document = Document(document_path)
    
    def analyze_document_styles(self):
        """–ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç–∏–ª–µ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
        style_report = {
            "–æ–±—â–∏–µ_—Å—Ç–∏–ª–∏": [],
            "–ø–∞—Ä–∞–≥—Ä–∞—Ñ_—Å—Ç–∏–ª–∏": [],
            "—Å–∏–º–≤–æ–ª_—Å—Ç–∏–ª–∏": [],
            "—Ç–∞–±–ª–∏—Ü–∞_—Å—Ç–∏–ª–∏": [],
            "–Ω—É–º–µ—Ä–∞—Ü–∏—è_—Å—Ç–∏–ª–∏": []
        }
        
        # –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Å—Ç–∏–ª–µ–π –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ
        for style in self.document.styles:
            try:
                style_info = {
                    "–∏–º—è": style.name,
                    "—Ç–∏–ø": str(style.type),
                }
                
                # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ —Å—Ç–∏–ª—è
                if hasattr(style, 'base_style') and style.base_style:
                    style_info["–±–∞–∑–æ–≤—ã–π_—Å—Ç–∏–ª—å"] = style.base_style.name
                else:
                    style_info["–±–∞–∑–æ–≤—ã–π_—Å—Ç–∏–ª—å"] = "–ù–µ—Ç"
                
                # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–∞—Ä–∞–≥—Ä–∞—Ñ-—Å—Ç–∏–ª–µ–π
                if style.type == 1:  # Paragraph style
                    para_style = style
                    style_info.update({
                        "–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ": str(para_style.paragraph_format.alignment) if para_style.paragraph_format.alignment else "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
                        "–º–µ–∂—Å—Ç—Ä–æ—á–Ω—ã–π_–∏–Ω—Ç–µ—Ä–≤–∞–ª": para_style.paragraph_format.line_spacing if para_style.paragraph_format.line_spacing else "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
                        "–æ—Ç—Å—Ç—É–ø_–ø–µ—Ä–≤–æ–π_—Å—Ç—Ä–æ–∫–∏": str(para_style.paragraph_format.first_line_indent) if para_style.paragraph_format.first_line_indent else "–ù–µ—Ç",
                        "–∏–Ω—Ç–µ—Ä–≤–∞–ª_–ø–µ—Ä–µ–¥": str(para_style.paragraph_format.space_before) if para_style.paragraph_format.space_before else "–ù–µ—Ç",
                        "–∏–Ω—Ç–µ—Ä–≤–∞–ª_–ø–æ—Å–ª–µ": str(para_style.paragraph_format.space_after) if para_style.paragraph_format.space_after else "–ù–µ—Ç",
                    })
                    
                    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —à—Ä–∏—Ñ—Ç–∞
                    if hasattr(para_style, 'font') and para_style.font:
                        style_info.update({
                            "—à—Ä–∏—Ñ—Ç": para_style.font.name,
                            "—Ä–∞–∑–º–µ—Ä_—à—Ä–∏—Ñ—Ç–∞": str(para_style.font.size),
                            "–∂–∏—Ä–Ω—ã–π": para_style.font.bold,
                            "–∫—É—Ä—Å–∏–≤": para_style.font.italic,
                        })
                    
                    style_report["–ø–∞—Ä–∞–≥—Ä–∞—Ñ_—Å—Ç–∏–ª–∏"].append(style_info)
                
                # –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ —Å—Ç–∏–ª–µ–π
                elif style.type == 2:  # Character style
                    style_report["—Å–∏–º–≤–æ–ª_—Å—Ç–∏–ª–∏"].append(style_info)
                elif style.type == 3:  # Table style
                    style_report["—Ç–∞–±–ª–∏—Ü–∞_—Å—Ç–∏–ª–∏"].append(style_info)
                elif style.type == 4:  # Numbering style
                    style_report["–Ω—É–º–µ—Ä–∞—Ü–∏—è_—Å—Ç–∏–ª–∏"].append(style_info)
                else:
                    style_report["–æ–±—â–∏–µ_—Å—Ç–∏–ª–∏"].append(style_info)
            
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–∏–ª—è {style.name}: {e}")
        
        return style_report
    
    def generate_style_report(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ —Å—Ç–∏–ª—è—Ö"""
        styles = self.analyze_document_styles()
        
        report = "üîç –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç–∏–ª–µ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞\n\n"
        
        # –ü–∞—Ä–∞–≥—Ä–∞—Ñ —Å—Ç–∏–ª–∏
        report += "### –°—Ç–∏–ª–∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤:\n"
        for style in styles["–ø–∞—Ä–∞–≥—Ä–∞—Ñ_—Å—Ç–∏–ª–∏"]:
            report += f"#### {style['–∏–º—è']}\n"
            report += f"- –ë–∞–∑–æ–≤—ã–π —Å—Ç–∏–ª—å: {style['–±–∞–∑–æ–≤—ã–π_—Å—Ç–∏–ª—å']}\n"
            report += f"- –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ: {style.get('–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            report += f"- –ú–µ–∂—Å—Ç—Ä–æ—á–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {style.get('–º–µ–∂—Å—Ç—Ä–æ—á–Ω—ã–π_–∏–Ω—Ç–µ—Ä–≤–∞–ª', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            report += f"- –û—Ç—Å—Ç—É–ø –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏: {style.get('–æ—Ç—Å—Ç—É–ø_–ø–µ—Ä–≤–æ–π_—Å—Ç—Ä–æ–∫–∏', '–ù–µ—Ç')}\n"
            report += f"- –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–¥: {style.get('–∏–Ω—Ç–µ—Ä–≤–∞–ª_–ø–µ—Ä–µ–¥', '–ù–µ—Ç')}\n"
            report += f"- –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ—Å–ª–µ: {style.get('–∏–Ω—Ç–µ—Ä–≤–∞–ª_–ø–æ—Å–ª–µ', '–ù–µ—Ç')}\n"
            
            # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —à—Ä–∏—Ñ—Ç–∞
            if '—à—Ä–∏—Ñ—Ç' in style:
                report += f"- –®—Ä–∏—Ñ—Ç: {style['—à—Ä–∏—Ñ—Ç']}\n"
                report += f"- –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞: {style.get('—Ä–∞–∑–º–µ—Ä_—à—Ä–∏—Ñ—Ç–∞', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
                report += f"- –ñ–∏—Ä–Ω—ã–π: {style.get('–∂–∏—Ä–Ω—ã–π', False)}\n"
                report += f"- –ö—É—Ä—Å–∏–≤: {style.get('–∫—É—Ä—Å–∏–≤', False)}\n"
            
            report += "\n"
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        report_path = os.path.join(os.path.dirname(self.document_path), "document_style_report.md")
        with open(report_path, 'w', encoding='utf-8') as f:
            f.write(report)
        
        print(f"üìÑ –û—Ç—á–µ—Ç –æ —Å—Ç–∏–ª—è—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {report_path}")
        return report

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∏–ª–µ–π"""
    document_path = '/home/user/study/diplom/diploma.docx'
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if not os.path.exists(document_path):
        print(f"–û—à–∏–±–∫–∞: —Ñ–∞–π–ª {document_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∏–ª–µ–π
    analyzer = DocumentStyleAnalyzer(document_path)
    analyzer.generate_style_report()

if __name__ == '__main__':
    main()
